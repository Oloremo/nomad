.job-status-panel {
  .select-mode {
    border: 1px solid $grey-blue;
    background: rgba(0, 0, 0, 0.05);
    border-radius: 2px;
    display: grid;
    gap: 0.5rem;
    grid-template-columns: 1fr 1fr;
    padding: 0.25rem 0.5rem;
    margin-left: 1rem;

    button {
      height: auto;
      padding: 0 0.5rem;
      background: transparent;
      transition: 0.1s;

      &:hover {
        background: rgba(255, 255, 255, 0.5);
      }

      &.is-active {
        background: $white;
      }
    }
  }

  .running-allocs-title {
    strong {
      font-weight: 800;
    }
  }

  .ungrouped-allocs {
    display: grid;
    gap: 10px;
    grid-auto-flow: column;
    grid-auto-columns: minmax(1px, 32px);
    & > .represented-allocation {
      width: auto;
    }
  }

  .alloc-status-summaries {
    display: flex;
    height: 32px;
    gap: 1.5rem;

    .allocation-status-block {
      display: grid;
      grid-template-columns: auto 50px;
      gap: 10px;

      &.rest-only {
        grid-template-columns: auto;
      }

      & > .ungrouped-allocs {
        display: grid;
        grid-auto-flow: column;
        gap: 10px;
        grid-auto-columns: unset;
        & > .represented-allocation {
          width: 32px;
        }
      }

      .represented-allocation.rest {
        font-size: 0.8rem;
        text-align: center;
        display: grid;
        align-content: center;
        font-weight: bold;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        width: 100%;
      }
    }
  }

  .represented-allocation {
    background: $green;
    border-radius: 4px;
    height: 32px;
    width: 32px;
    color: white;

    $queued: $grey;
    $starting: $grey-lighter;
    $running: $primary;
    $complete: $nomad-green-dark;
    $failed: $danger;
    $lost: $dark;

    &.running {
      background: $running;
    }
    &.failed {
      background: $failed;
    }
    &.unknown {
      background: $unknown;
    }
    &.queued {
      background: $queued;
    }
    &.complete {
      background: $complete;
    }
    &.starting {
      background: $starting;
      color: black;
    }
    &.lost {
      background: $lost;
    }
  }

  legend {
    padding: 2rem 0;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.5rem;
    .legend-item {
      display: grid;
      gap: 0.5rem;
      grid-template-columns: auto 1fr;
      .represented-allocation {
        width: 20px;
        height: 20px;
      }
    }
  }
}

.fake-box-for-manipulating-allocs {
  position: fixed;
  top: 45vh;
  right: 0;
  background: black;
  color: white;
  padding: 1rem;
  z-index: 1000;
  label,
  strong {
    color: white;
  }
  strong,
  input {
    display: block;
  }
  input {
    margin-bottom: 0.5rem;
  }
}
